---
- name: bootstrap k8s cluster
  hosts: cluster
  gather_facts: false
  vars:
    ci: false
    latest: false
    cluster_node_network: 172.31.255
  tasks:
    - name: install package(s)
      pacman:
        state: latest
        update_cache: true
        name:
          - glibc
          - systemd
          - docker
          - rng-tools
          - net-tools
          - inetutils
          - nfs-utils
          - tcpdump
          - ebtables
          - ethtool
          - socat
          - cni-plugins
          - conntrack-tools
          - jq
          - nmap
          - prometheus-node-exporter
      become: true
      when: latest|bool

    - name: update hostname to be in sync with the inventory host name
      hostname: name={{ inventory_hostname_short }}
      become: true
      when: not ci|bool

    - name: update files under /etc
      template:
        src: "templates/etc/{{ item }}.j2"
        dest: "/etc/{{ item }}"
        mode: 0644
        owner: root
        group: root
      with_items:
        - hosts
        - systemd/network/ens3.network
      become: true
      when: not ci|bool

    - name: add user to the docker group
      user:
        name: "{{ lookup('env', 'USER') }}"
        append: true
        groups: docker
      become: true
      when: not ci|bool

    - name: restart systemd services
      systemd: name={{ item }} enabled=true state=restarted
      with_items:
        - systemd-networkd
        - systemd-resolved
        - systemd-timesyncd
        - sshd
        - rngd
        - docker
        - prometheus-node-exporter
      become: true
      when: not ci|bool

    # we will use systemd cgroup for the container runtime.
    # https://kubernetes.io/docs/setup/cri/
    - name: allow the insecure host.local local docker registry access
      lineinfile:
        path: /etc/systemd/system/multi-user.target.wants/docker.service
        regexp: "^ExecStart"
        line: "ExecStart=/usr/bin/dockerd --insecure-registry host.local:5000 -H fd:// $DOCKER_OPTS"
      become: true
      when: not ci|bool

    - name: restart docker service to reflect the registry change
      systemd: name=docker enabled=true state=restarted
      become: true
      when: not ci|bool

    - name: copy k8s systemd unit file(s)
      template:
        src:   "templates/lib/systemd/system/{{ item }}.j2"
        dest:  "/lib/systemd/system/{{ item }}"
        mode:  0644
        owner: root
        group: root
      with_items:
        - kubelet.service
      become: true
      when: not ci|bool

    - name: create k8s related directories
      file:
        path: "{{ item }}"
        state: directory
        mode:  0755
        owner: root
        group: root
      with_items:
        - /etc/kubernetes/manifests
        - /etc/systemd/system/kubelet.service.d
      become: true

    - name: copy kubelet unit file(s) tailered to kubeadm setup
      template:
        src:  "templates/etc/systemd/system/kubelet.service.d/{{ item }}.j2"
        dest: "/etc/systemd/system/kubelet.service.d/{{ item }}"
        mode: 0644
        owner: root
        group: root
      with_items:
        - 10-kubeadm.conf
      become: true

- name: build the k8s
  import_playbook: build.yaml
  when: build|bool

- name: cleanup the cluster first
  import_playbook: teardown.yaml

- name: bootstrap kubernetes head nodes
  import_playbook: head.yaml

- name: bootstrap kubernetes worker node
  import_playbook: work.yaml

- name: bootstrap kubernetes network
  import_playbook: network.yaml
  when: network|bool and not ci|bool
